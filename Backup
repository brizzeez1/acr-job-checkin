<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <title>Basic Job‑Checkins Map</title>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <link
    rel="stylesheet"
    href="https://unpkg.com/leaflet/dist/leaflet.css"
  />
  <style>
    html, body { height:100%; margin:0; padding:0 }
    #map { width:100%; height:100% }
  </style>
</head>
<body>
  <div id="map"></div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js"></script>
  <script>
    // 1️⃣ your published‑to‑web CSV URL:
    const sheetUrl = 
      'https://docs.google.com/spreadsheets/d/e/2PACX-1vRJlw6hMgViLlMPytg-Pwwn73EDzcFOjxndcjN8vBkNnOLGCo-SErsbTVwmhgHGEJSfa8lElgSkQILz/pub?output=csv';

    // 2️⃣ set up map:
    const map = L.map('map').setView([33.4484, -112.0740], 9);
    L.tileLayer(
      'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      { attribution: '&copy; OpenStreetMap contributors' }
    ).addTo(map);

    // 3️⃣ red‑dot icon factory:
    const redIcon = L.icon({
      iconUrl: 'https://maps.google.com/mapfiles/ms/icons/red-dot.png',
      iconSize: [32, 32]
    });

    // 4️⃣ parse CSV & drop markers:
    Papa.parse(sheetUrl, {
      download: true,
      header:   true,
      complete: ({ data }) => {
        data.forEach(row => {
          const lat = parseFloat(row.Latitude),
                lng = parseFloat(row.Longitude);
          if (!isNaN(lat) && !isNaN(lng)) {
            L.marker([lat, lng], { icon: redIcon })
              .addTo(map);
          }
        });
      }
    });
  </script>
</body>
</html>
